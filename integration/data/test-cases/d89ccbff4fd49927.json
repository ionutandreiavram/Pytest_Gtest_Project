{"uid":"d89ccbff4fd49927","name":"test_fibonacci[-1--1]","fullName":"tests.integration.test_fibonacci#test_fibonacci","historyId":"186144fd90e25c97c79a48f1d4554f2e","time":{"start":1752910621311,"stop":1752910621312,"duration":1},"description":"Tests the C Fibonacci function with various valid inputs.\n                      Args: \n                      n (uint64): The input number for the Fibonacci calculation.\n                      expected (uint64): The expected Fibonacci result for 'n'.","descriptionHtml":"<p>Tests the C Fibonacci function with various valid inputs.<br />\nArgs:<br />\nn (uint64): The input number for the Fibonacci calculation.<br />\nexpected (uint64): The expected Fibonacci result for 'n'.</p>\n","status":"broken","statusMessage":"NameError: name 'fibonacci_lib' is not defined","statusTrace":"n = -1, expected = -1\n\n    @allure.feature(\"Fibonacci Integration Tests\")\n    @allure.story(\"Fibonacci Calculation\")\n    @allure.description(\"Tests the C Fibonacci function with various valid inputs.\\n \\\n                         Args: \\n \\\n                         n (uint64): The input number for the Fibonacci calculation.\\n \\\n                         expected (uint64): The expected Fibonacci result for 'n'.\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.label(\"tester\", \"Ionut\")\n    @allure.label(\"test_type\", \"integration\")\n    @pytest.mark.parametrize(\"n, expected\", [\n        (0, 0), # Test case 1 -  Fibonacci(0) = 0\n        (1, 0), # Test case 2 -  Fibonacci(1) = 0\n        (2, 1), # Test case 3 -  Fibonacci(2) = 1\n        (3, 2), # Test case 4 -  Fibonacci(3) = 2\n        (4, 3), # Test case 5 -  Fibonacci(4) = 3\n        (5, 5), # Test case 6 -  Fibonacci(5) = 5\n        (6, 8), # Test case 7 -  Fibonacci(6) = 8\n        (7, 13), # Test case 8 -  Fibonacci(7) = 13\n        (8, 21), # Test case 9 -  Fibonacci(8) = 21\n        (9, 34), # Test case 10 -  Fibonacci(9) = 34\n        (10, 55), # Test case 11 -  Fibonacci(10) = 55\n        (20, 6765), # Test case 12 -  Fibonacci(20) = 6765\n        (30, 832040), # Test case 13 -  Fibonacci(30) = 832040\n        (50, 12586269025), # Test case 14 -  Fibonacci(50) = 12586269025\n        (60, 1548008755920), # Test case 15 -  Fibonacci(60) = 1548008755920\n        (93, 12200160415121876738), # Test case 16 - Fibonacci(93) = 12200160415121876738\n        (-1, -1) # Test case 17 - Fibonacci(17) = -1\n    ])\n    def test_fibonacci(n, expected):\n        \"\"\"\n        Tests the C Fibonacci function with various valid inputs.\n    \n        Args:\n            n (uint64): The input number for the Fibonacci calculation.\n            expected (uint64): The expected Fibonacci result for 'n'.\n        \"\"\"\n        with allure.step(f\"Validate input n={n}\"):\n             allure.attach(f\"Input parameter is {n}\", name=\"Input Validation\", attachment_type=allure.attachment_type.TEXT)\n             if n < 0:\n>               fibonacci_lib.fibonacci.argtypes = [ctypes.c_int64]\nE               NameError: name 'fibonacci_lib' is not defined\n\ntests/integration/test_fibonacci.py:51: NameError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"Tests the C Fibonacci function with various valid inputs.\n                      Args: \n                      n (uint64): The input number for the Fibonacci calculation.\n                      expected (uint64): The expected Fibonacci result for 'n'.","status":"broken","statusMessage":"NameError: name 'fibonacci_lib' is not defined","statusTrace":"n = -1, expected = -1\n\n    @allure.feature(\"Fibonacci Integration Tests\")\n    @allure.story(\"Fibonacci Calculation\")\n    @allure.description(\"Tests the C Fibonacci function with various valid inputs.\\n \\\n                         Args: \\n \\\n                         n (uint64): The input number for the Fibonacci calculation.\\n \\\n                         expected (uint64): The expected Fibonacci result for 'n'.\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.label(\"tester\", \"Ionut\")\n    @allure.label(\"test_type\", \"integration\")\n    @pytest.mark.parametrize(\"n, expected\", [\n        (0, 0), # Test case 1 -  Fibonacci(0) = 0\n        (1, 0), # Test case 2 -  Fibonacci(1) = 0\n        (2, 1), # Test case 3 -  Fibonacci(2) = 1\n        (3, 2), # Test case 4 -  Fibonacci(3) = 2\n        (4, 3), # Test case 5 -  Fibonacci(4) = 3\n        (5, 5), # Test case 6 -  Fibonacci(5) = 5\n        (6, 8), # Test case 7 -  Fibonacci(6) = 8\n        (7, 13), # Test case 8 -  Fibonacci(7) = 13\n        (8, 21), # Test case 9 -  Fibonacci(8) = 21\n        (9, 34), # Test case 10 -  Fibonacci(9) = 34\n        (10, 55), # Test case 11 -  Fibonacci(10) = 55\n        (20, 6765), # Test case 12 -  Fibonacci(20) = 6765\n        (30, 832040), # Test case 13 -  Fibonacci(30) = 832040\n        (50, 12586269025), # Test case 14 -  Fibonacci(50) = 12586269025\n        (60, 1548008755920), # Test case 15 -  Fibonacci(60) = 1548008755920\n        (93, 12200160415121876738), # Test case 16 - Fibonacci(93) = 12200160415121876738\n        (-1, -1) # Test case 17 - Fibonacci(17) = -1\n    ])\n    def test_fibonacci(n, expected):\n        \"\"\"\n        Tests the C Fibonacci function with various valid inputs.\n    \n        Args:\n            n (uint64): The input number for the Fibonacci calculation.\n            expected (uint64): The expected Fibonacci result for 'n'.\n        \"\"\"\n        with allure.step(f\"Validate input n={n}\"):\n             allure.attach(f\"Input parameter is {n}\", name=\"Input Validation\", attachment_type=allure.attachment_type.TEXT)\n             if n < 0:\n>               fibonacci_lib.fibonacci.argtypes = [ctypes.c_int64]\nE               NameError: name 'fibonacci_lib' is not defined\n\ntests/integration/test_fibonacci.py:51: NameError","steps":[{"name":"Validate input n=-1","time":{"start":1752910621311,"stop":1752910621311,"duration":0},"status":"broken","statusMessage":"NameError: name 'fibonacci_lib' is not defined\n","statusTrace":"  File \"/__w/Pytest_Gtest_Project/Pytest_Gtest_Project/tests/integration/test_fibonacci.py\", line 51, in test_fibonacci\n    fibonacci_lib.fibonacci.argtypes = [ctypes.c_int64]\n    ^^^^^^^^^^^^^\n","steps":[],"attachments":[{"uid":"30f20b0513eb716a","name":"Input Validation","source":"30f20b0513eb716a.txt","type":"text/plain","size":21}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"feature","value":"Fibonacci Integration Tests"},{"name":"tester","value":"Ionut"},{"name":"story","value":"Fibonacci Calculation"},{"name":"test_type","value":"integration"},{"name":"severity","value":"normal"},{"name":"parentSuite","value":"tests.integration"},{"name":"suite","value":"test_fibonacci"},{"name":"host","value":"6958dc26d552"},{"name":"thread","value":"2293-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.integration.test_fibonacci"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected","value":"-1"},{"name":"n","value":"-1"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"d89ccbff4fd49927.json","parameterValues":["-1","-1"]}